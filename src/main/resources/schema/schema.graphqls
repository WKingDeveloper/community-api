scalar Long
scalar Timestamp

type Query {
    board(id: ID!): Board
    boards(page: Int, size: Int) : BoardConnection!
}

type Mutation {
    createBoard(param: BoardParamInput!): Board!
}

type Board {
    id: ID!
    name: String!
    parentBoardId: Long
    indexNo: Int!
    status: CommonState!
    deletedAt: Timestamp
}

input BoardParamInput {
    name: String!
    parentBoardId: Long
    indexNo: Int!
}

type BoardConnection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [BoardEdge!]!
}

type BoardEdge {
    cursor: String!
    node: Board!
}

type PageInfo {
    hasNextPage: Boolean!
    endCursor: String
}

enum CommonState {
    ACTIVE
    INACTIVE
    DELETED
}

