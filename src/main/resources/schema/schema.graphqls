# 사용 권한 검증: 로그인시 획득환 AuthorityLevel 에 따라 허용 가능한지 확인
directive @auth(requires: [AuthorityLevel!]!) on FIELD_DEFINITION | OBJECT

enum AuthorityLevel {
    UNKNOWN
    USER
    ADMIN
    SYSTEM
}

scalar Long
scalar Timestamp

type Query {
    boardContainer: BoardContainer
    postContainer: PostContainer
}

type Mutation {
    createBoard(param: BoardCreateParamInput!): Board! @auth(requires: [ADMIN])
    createPost(param: PostCreateParamInput!): Post! @auth(requires: [USER, ADMIN])
}

type BoardContainer {
    board(id: ID!): Board
    boards: [Board!]
}

type Board {
    id: ID!
    name: String!
    indexNo: Int!
    childBoards: [Board!]
    parentBoardId: Long
    status: CommonState!
    deletedAt: Timestamp
}

input BoardCreateParamInput {
    name: String!
    parentBoardId: Long
    indexNo: Int!
}

type PostContainer {
    post(id: ID!): Post
    posts(page: Int, size: Int) : PostConnection!
}


type Post {
    id: ID!
    title: String!
    content: String!
    likes: Int!
    views: Int!
    board: Board!
    status: CommonState!
    deletedAt: Timestamp
}

type PostConnection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [PostEdge!]!
}

type PostEdge {
    cursor: String!
    node: Post!
}

input PostCreateParamInput {
    title: String!
    content: String!
    boardId: Long!
}

type PageInfo {
    hasNextPage: Boolean!
    endCursor: String
}

enum CommonState {
    ACTIVE
    INACTIVE
    DELETED
}

